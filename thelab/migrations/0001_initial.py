# Generated by Django 5.0 on 2024-05-06 20:54

import django.contrib.auth.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('schedule', '0014_use_autofields_for_pk'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, default='(last name)', max_length=30, null=True)),
                ('birthday', models.DateField(blank=True, help_text="Format: YYYY-MM-DD (Include the dashes, I want to alter this field to go to its own interface with rolodex scrolling for the birthday (https://www.youtube.com/watch?v=zM5_vZlEcUo) with years | months | days. Then, there would be a button that says Enter or something. If the user clicks enter and the calculated age is at least 18, two required fields appear for camera-uploaded pictures of the front and back of the user's driver's license. Lot of functionality I'd have to be, not a high priority because I'll probably be creating most of the initial profiles.)", null=True)),
                ('city', models.CharField(blank=True, max_length=40)),
                ('state', models.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('VA', 'VA'), ('NM', 'NM'), ('VI', 'VI'), ('NY', 'NY'), ('WA', 'WA'), ('NC', 'NC'), ('WV', 'WV'), ('ND', 'ND'), ('WI', 'WI'), ('WY', 'WY'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('PR', 'PR'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT')], max_length=25)),
                ('coach', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('image', models.ImageField(default='user_pics/default.jpg', upload_to='user_pics')),
                ('type', models.CharField(choices=[('person', 'person'), ('business', 'business')], default='person', max_length=20)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport', models.CharField(help_text="(Just the sport- leave out Men's or Women's & whether College or Professional)", max_length=20)),
                ('team', models.CharField(blank=True, max_length=50)),
                ('record', models.TextField(help_text='(Ideally, a copy-and-pasted link to the roster of the team on which you are or were a player or a coach)')),
                ('approved', models.BooleanField(null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='thelab.profile')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_type', models.CharField(choices=[('personal', 'personal'), ('parent', 'parent'), ('business', 'business')], default='personal', max_length=15)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='thelab.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='thelab.user')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('personal_profile_creation', 'personal_profile_creation'), ('team_approval', 'team_approval')], default='personal_profile_creation', max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='thelab.user')),
            ],
        ),
        migrations.CreateModel(
            name='HomeCalendar',
            fields=[
                ('calendar_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='schedule.calendar')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='thelab.user')),
            ],
            bases=('schedule.calendar',),
        ),
    ]
